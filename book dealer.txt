-- 1️⃣ Create tables

CREATE TABLE AUTHOR7 (
    AUTHOR_ID INT PRIMARY KEY,
    NAME VARCHAR(50),
    CITY VARCHAR(50),
    COUNTRY VARCHAR(50)
);

CREATE TABLE PUBLISHER7 (
    PUBLISHER_ID INT PRIMARY KEY,
    NAME VARCHAR(50),
    CITY VARCHAR(50),
    COUNTRY VARCHAR(50)
);

CREATE TABLE CATEGORY7 (
    CATEGORY_ID INT PRIMARY KEY,
    DESCRIPTION VARCHAR(100)
);

CREATE TABLE CATALOG7 (
    BOOK_ID INT PRIMARY KEY,
    TITLE VARCHAR(100),
    AUTHOR_ID INT,
    PUBLISHER_ID INT,
    CATEGORY_ID INT,
    YEAR INT,
    PRICE DECIMAL(10,2),
    FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHOR7(AUTHOR_ID),
    FOREIGN KEY (PUBLISHER_ID) REFERENCES PUBLISHER7(PUBLISHER_ID),
    FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY7(CATEGORY_ID)
);

CREATE TABLE ORDER_DETAILS7 (
    ORDER_NO INT,
    BOOK_ID INT,
    QUANTITY INT,
    PRIMARY KEY (ORDER_NO, BOOK_ID),
    FOREIGN KEY (BOOK_ID) REFERENCES CATALOG7(BOOK_ID)
);

-- 2️⃣ Parameterized insertions

-- AUTHOR7
INSERT INTO AUTHOR7 VALUES(&AUTHOR_ID, '&NAME', '&CITY', '&COUNTRY');

-- PUBLISHER7
INSERT INTO PUBLISHER7 VALUES(&PUBLISHER_ID, '&NAME', '&CITY', '&COUNTRY');

-- CATEGORY7
INSERT INTO CATEGORY7 VALUES(&CATEGORY_ID, '&DESCRIPTION');

-- CATALOG7
INSERT INTO CATALOG7 VALUES(&BOOK_ID, '&TITLE', &AUTHOR_ID, &PUBLISHER_ID, &CATEGORY_ID, &YEAR, &PRICE);

-- ORDER_DETAILS7
INSERT INTO ORDER_DETAILS7 VALUES(&ORDER_NO, &BOOK_ID, &QUANTITY);

-- 3️⃣ Queries

-- (iii) Authors with 2 or more books, price > avg price, year > 2010
SELECT A.AUTHOR_ID, A.NAME, COUNT(C.BOOK_ID) AS TOTAL_BOOKS
FROM AUTHOR7 A
JOIN CATALOG7 C ON A.AUTHOR_ID = C.AUTHOR_ID
WHERE C.PRICE > (SELECT AVG(PRICE) FROM CATALOG7)
  AND C.YEAR > 2010
GROUP BY A.AUTHOR_ID, A.NAME
HAVING COUNT(C.BOOK_ID) >= 2;

-- (iv) Author of the book with maximum sales
SELECT A.AUTHOR_ID, A.NAME, SUM(O.QUANTITY) AS TOTAL_SALES
FROM AUTHOR7 A
JOIN CATALOG7 C ON A.AUTHOR_ID = C.AUTHOR_ID
JOIN ORDER_DETAILS7 O ON C.BOOK_ID = O.BOOK_ID
GROUP BY A.AUTHOR_ID, A.NAME
ORDER BY TOTAL_SALES DESC
LIMIT 1;

-- (v) Increase price of books by a specific publisher by 10%
UPDATE CATALOG7
SET PRICE = PRICE * 1.10
WHERE PUBLISHER_ID = &PUBLISHER_ID;
